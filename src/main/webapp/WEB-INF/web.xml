<?xml version="1.0" encoding="ISO-8859-1" standalone="no"?>
<web-app
        version="2.4"
        xmlns="http://java.sun.com/xml/ns/j2ee"
        xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
        xsi:schemaLocation="http://java.sun.com/xml/ns/j2ee http://java.sun.com/xml/ns/j2ee/web-app_2_4.xsd">

    <display-name>DaBunny55</display-name>
    <description>DaBunny55 Application</description>

    <!-- Enable escaping of form submission contents -->
    <context-param>
        <param-name>defaultHtmlEscape</param-name>
        <param-value>true</param-value>
    </context-param>
    <context-param>
        <param-name>contextConfigLocation</param-name>
        <param-value>
            /WEB-INF/spring/applicationContext.xml,
            /WEB-INF/spring/mvc-config.xml,
            /WEB-INF/spring/security.xml
        </param-value>
    </context-param>

    <!-- Is responsible for starting and stopping of the Spring root ApplicationContext interface. The
    ContextLoaderListener determines which configurations are to be used. -->
    <listener>
        <listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
    </listener>

    <!-- Dispatcher servlet creates ApplicationContext, which is a child of the root Application Context
    interface. Typically, Spring MVC specific components are initialized in the ApplicationContext interface
    of DispatcherServlet while the rest are loaded by ContextLoadListener. It is important to know that beans
    in a child ApplicationContext (such as those created by DispatcherServlet) can reference beans of its
    parent ApplicationContext (such as those created by ContextLoaderListener). However, the parent
    ApplicationContext cannot refer to beans of the child ApplicationContext. -->
    <servlet>
        <servlet-name>bunny55</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        <init-param>
            <param-name>contextConfigLocation</param-name>
            <param-value>/WEB-INF/spring/mvc-config.xml</param-value>
        </init-param>
        <load-on-startup>1</load-on-startup>
    </servlet>
    <servlet-mapping>
        <servlet-name>bunny55</servlet-name>
        <url-pattern>/</url-pattern>
    </servlet-mapping>

    <!-- Configure springSecurityFilterChain to intercept all requests. The order is important. So,
    make sure the springSecurityFilterChain is declared first. -->
    <filter>
        <filter-name>springSecurityFilterChain</filter-name>
        <filter-class>org.springframework.web.filter.DelegatingFilterProxy</filter-class>
    </filter>
    <filter-mapping>
        <filter-name>springSecurityFilterChain</filter-name>
        <url-pattern>/*</url-pattern>
    </filter-mapping>

    <session-config>
        <session-timeout>10</session-timeout>
    </session-config>

    <error-page>
        <exception-type>java.lang.Exception</exception-type>
        <location>/error.jsp</location>
    </error-page>
    <error-page>
        <error-code>404</error-code>
        <location>/404.jsp</location>
    </error-page>
</web-app>